version: "3.7"

services:
    app:
        image: node:12-alpine
        container_name: app
        networks:
            - frontend
        working_dir: /app
        environment:
            NODE_PORT: 3000
        volumes:
            - ./node_app:/app
        command: sh -c "yarn install && yarn run dev"
        restart: unless-stopped
    api:
        image: node:12-alpine
        container_name: api
        networks:
            - frontend
        working_dir: /app
        environment:
            NODE_PORT: 3500
        volumes:
            - ./node_api:/app
        command: sh -c "yarn install && yarn run dev"
        restart: unless-stopped
    nginx:
        image: nginx:1.17.9-alpine
        container_name: nginx
        networks:
            - frontend
        volumes:
            - ./data/nginx/conf.d:/etc/nginx/conf.d
            # - ./cert/certbot/conf:/etc/letsencrypt
            # - ./cert/certbot/www:/var/www/certbot
        ports:
            - 80:80
            # - 443:443
        # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
            # - ./src/static:/usr/share/nginx/html
        restart: unless-stopped
    postgres:
        image: postgres:12.2
        container_name: postgres
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: 123
            POSTGRES_DB: klumba
            PGDATA: /data/postgres
        volumes:
            - ./postgres:/data/postgres
        networks:
            - frontend
        restart: unless-stopped
        
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: user@domain.com
            PGADMIN_DEFAULT_PASSWORD: SuperSecret
            PGADMIN_LISTEN_PORT: 5050
        volumes:
            - ./pgadmin:/root/.pgadmin
        networks:
            - frontend
        restart: unless-stopped
        
        
        # ports:
        #     - 5050:80
    # certbot:
    #     image: certbot/certbot
    #     container_name: certbot
    #     networks:
    #         - frontend
    #     volumes:
    #         - ./cert/certbot/conf:/etc/letsencrypt
    #         - ./cert/certbot/www:/var/www/certbot
    #     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    #     restart: unless-stopped
        

networks:
    frontend:
        name: frontend
    # postgres:
    #     name: postgres
    #     driver: bridge
        # external: true
        # Сообщает о том, что сеть nginx_net находится не в этом контейнере.
            

# Если сеть не установлена, используй на nginx
# links:
#     - app
#     - api
    
# ports:
#     # Слева порт, который будет доступен на локальной машине. 
#     # Справа - тот, к которому нужен доступ в контейнере.
#     - 3000:3000
    # app:
    #     image: node:12-alpine
    #     working_dir: /app
    #     environment:
    #         MYSQL_HOST: mysql
    #         MYSQL_USER: root
    #         MYSQL_PASSWORD: secret
    #         MYSQL_DB: todos
    #     ports:
    #         - 3000:3000
    #     volumes:
    #         - ./:/app
    #     command: sh -c "yarn install && yarn run dev"
    #     depends_on:
    #         - mysql
    #     restart: always
    # mysql:
    #     image: mysql:5.7
    #     volumes:
    #         - ./db:/var/lib/mysql
    #     environment: 
    #         MYSQL_ROOT_PASSWORD: secret
    #         MYSQL_DATABASE: todos
    #     restart: always


# volumes:
#     todo-mysql-data:  

# networks:
#     mynetwork:
#     driver: bridge
#     ipam:
#         driver: default
#         config:
#         - subnet: 10.10.10.0/24
#             ip_range: 10.10.0.0/24
#             gateway: 10.10.10.1
      